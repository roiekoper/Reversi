{
  "_args": [
    [
      {
        "raw": "json5@^2.1.0",
        "scope": null,
        "escapedName": "json5",
        "name": "json5",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/roiekoper/Study/Second-year/Web-Developing-Course/Reversi-Webpack/node_modules/@babel/core"
    ]
  ],
  "_from": "json5@^2.1.0",
  "_hasShrinkwrap": false,
  "_id": "json5@2.1.0",
  "_location": "/json5",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/json5_2.1.0_1538111508433_0.060465334055555875"
  },
  "_npmUser": {
    "name": "jordanbtucker",
    "email": "jordanbtucker@gmail.com"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json5@^2.1.0",
    "scope": null,
    "escapedName": "json5",
    "name": "json5",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@babel/core"
  ],
  "_resolved": "https://registry.npmjs.org/json5/-/json5-2.1.0.tgz",
  "_shasum": "e7a0c62c48285c628d20a10b85c89bb807c32850",
  "_shrinkwrap": null,
  "_spec": "json5@^2.1.0",
  "_where": "/Users/roiekoper/Study/Second-year/Web-Developing-Course/Reversi-Webpack/node_modules/@babel/core",
  "author": {
    "name": "Aseem Kishore",
    "email": "aseem.kishore@gmail.com"
  },
  "bin": {
    "json5": "lib/cli.js"
  },
  "browser": "dist/index.js",
  "bugs": {
    "url": "https://github.com/json5/json5/issues"
  },
  "contributors": [
    {
      "name": "Max Nanasy",
      "email": "max.nanasy@gmail.com"
    },
    {
      "name": "Andrew Eisenberg",
      "email": "andrew@eisenberg.as"
    },
    {
      "name": "Jordan Tucker",
      "email": "jordanbtucker@gmail.com"
    }
  ],
  "dependencies": {
    "minimist": "^1.2.0"
  },
  "description": "JSON for humans.",
  "devDependencies": {
    "core-js": "^2.5.7",
    "eslint": "^5.3.0",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^3.8.0",
    "eslint-plugin-standard": "^3.1.0",
    "regenerate": "^1.4.0",
    "rollup": "^0.64.1",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-commonjs": "^9.1.5",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-terser": "^1.0.1",
    "sinon": "^6.1.5",
    "tap": "^12.0.1",
    "unicode-10.0.0": "^0.7.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-8Mh9h6xViijj36g7Dxi+Y4S6hNGV96vcJZr/SrlHh1LR/pEn/8j/+qIBbs44YKl69Lrfctp4QD+AdWLTMqEZAQ==",
    "shasum": "e7a0c62c48285c628d20a10b85c89bb807c32850",
    "tarball": "https://registry.npmjs.org/json5/-/json5-2.1.0.tgz",
    "fileCount": 16,
    "unpackedSize": 233133,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrbgVCRA9TVsSAnZWagAAamIP/0ocnmt26H7vE3NHdpA1\noyu/1NUXH4KlkglZnAhPiqcq6xyVf9KMM4Nq+1i4tpqDCZth1j0MCu5DanmU\n1FHY/XQEiW9YyNK1mNIorYMxGfcyFAhzGzQmKnW2Kf49yNRyIlD9lgVH+O4E\nfJxGkkVlGVxnxaUBufYzE5JPRGGhljg5nBAt5g7Q5tyBvDLLVDf69SsIsfRF\nPRpFJGZB2zYyxY9PUTGsSt7o9awZJKeH3OQnz9LuHLP0+y5DAEDQkyjR/g8R\nIpkUQ+wXIttVaOagvO3hHRZF0llA10hpyASmjvT+042KOe2njo41xZzNuPr2\nAbBpq8JXuTey1O7Ie4M7tlc6JkOwr18ZVws8YQr01RXYHueC9WhU34RNUAII\n84NkWkb43qBMOr+brq1rAs3QILrDsYbhK38mCD6IzJQSDJejfP6xnpAmtwU1\nXnu6FrDn+4fnOxGEfxIKct7NzEl1mVzG6X/SpT30EdgTKmpPB6AEALfNM+F+\nidirdG5IU6i6JJYNiyqC2JJOWgb/paKGYWkHtRGpM19bJImd+1Hnb/9Gg26Z\nsQ2mTZd3adJhwurZY6lUnDcDrLyVYYRnuhJBnUKrSTLDK/VkdhzhkblvAi3d\n1O6I6VLEYcxUijJE8dEs0PFRw6EeMJ0B6Lr9TLEprqcxbgNXEOEaqOhP2Prc\nr4HH\r\n=n65n\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "lib/",
    "dist/"
  ],
  "gitHead": "69c4a75d345a58a773148dd9c05ce74e668dc87d",
  "homepage": "http://json5.org/",
  "keywords": [
    "json",
    "json5",
    "es5",
    "es2015",
    "ecmascript"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "aseemk",
      "email": "aseem.kishore@gmail.com"
    },
    {
      "name": "jordanbtucker",
      "email": "jordanbtucker@gmail.com"
    }
  ],
  "name": "json5",
  "optionalDependencies": {},
  "readme": "# JSON5 â€“ JSON for Humans\n\n[![Build Status](https://travis-ci.org/json5/json5.svg)][Build Status]\n[![Coverage\nStatus](https://coveralls.io/repos/github/json5/json5/badge.svg)][Coverage\nStatus]\n\nThe JSON5 Data Interchange Format (JSON5) is a superset of [JSON] that aims to\nalleviate some of the limitations of JSON by expanding its syntax to include\nsome productions from [ECMAScript 5.1].\n\nThis JavaScript library is the official reference implementation for JSON5\nparsing and serialization libraries.\n\n[Build Status]: https://travis-ci.org/json5/json5\n\n[Coverage Status]: https://coveralls.io/github/json5/json5\n\n[JSON]: https://tools.ietf.org/html/rfc7159\n\n[ECMAScript 5.1]: https://www.ecma-international.org/ecma-262/5.1/\n\n## Summary of Features\nThe following ECMAScript 5.1 features, which are not supported in JSON, have\nbeen extended to JSON5.\n\n### Objects\n- Object keys may be an ECMAScript 5.1 _[IdentifierName]_.\n- Objects may have a single trailing comma.\n\n### Arrays\n- Arrays may have a single trailing comma.\n\n### Strings\n- Strings may be single quoted.\n- Strings may span multiple lines by escaping new line characters.\n- Strings may include character escapes.\n\n### Numbers\n- Numbers may be hexadecimal.\n- Numbers may have a leading or trailing decimal point.\n- Numbers may be [IEEE 754] positive infinity, negative infinity, and NaN.\n- Numbers may begin with an explicit plus sign.\n\n### Comments\n- Single and multi-line comments are allowed.\n\n### White Space\n- Additional white space characters are allowed.\n\n[IdentifierName]: https://www.ecma-international.org/ecma-262/5.1/#sec-7.6\n\n[IEEE 754]: http://ieeexplore.ieee.org/servlet/opac?punumber=4610933\n\n## Short Example\n```js\n{\n  // comments\n  unquoted: 'and you can quote me on that',\n  singleQuotes: 'I can use \"double quotes\" here',\n  lineBreaks: \"Look, Mom! \\\nNo \\\\n's!\",\n  hexadecimal: 0xdecaf,\n  leadingDecimalPoint: .8675309, andTrailing: 8675309.,\n  positiveSign: +1,\n  trailingComma: 'in objects', andIn: ['arrays',],\n  \"backwardsCompatible\": \"with JSON\",\n}\n```\n\n## Specification\nFor a detailed explanation of the JSON5 format, please read the [official\nspecification](https://json5.github.io/json5-spec/).\n\n## Installation\n### Node.js\n```sh\nnpm install json5\n```\n\n```js\nconst JSON5 = require('json5')\n```\n\n### Browsers\n```html\n<script src=\"https://unpkg.com/json5@^2.0.0/dist/index.min.js\"></script>\n```\n\nThis will create a global `JSON5` variable.\n\n## API\nThe JSON5 API is compatible with the [JSON API].\n\n[JSON API]:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\n\n### JSON5.parse()\nParses a JSON5 string, constructing the JavaScript value or object described by\nthe string. An optional reviver function can be provided to perform a\ntransformation on the resulting object before it is returned.\n\n#### Syntax\n    JSON5.parse(text[, reviver])\n\n#### Parameters\n- `text`: The string to parse as JSON5.\n- `reviver`: If a function, this prescribes how the value originally produced by\n  parsing is transformed, before being returned.\n\n#### Return value\nThe object corresponding to the given JSON5 text.\n\n### JSON5.stringify()\nConverts a JavaScript value to a JSON5 string, optionally replacing values if a\nreplacer function is specified, or optionally including only the specified\nproperties if a replacer array is specified.\n\n#### Syntax\n    JSON5.stringify(value[, replacer[, space]])\n    JSON5.stringify(value[, options])\n\n#### Parameters\n- `value`: The value to convert to a JSON5 string.\n- `replacer`: A function that alters the behavior of the stringification\n  process, or an array of String and Number objects that serve as a whitelist\n  for selecting/filtering the properties of the value object to be included in\n  the JSON5 string. If this value is null or not provided, all properties of the\n  object are included in the resulting JSON5 string.\n- `space`: A String or Number object that's used to insert white space into the\n  output JSON5 string for readability purposes. If this is a Number, it\n  indicates the number of space characters to use as white space; this number is\n  capped at 10 (if it is greater, the value is just 10). Values less than 1\n  indicate that no space should be used. If this is a String, the string (or the\n  first 10 characters of the string, if it's longer than that) is used as white\n  space. If this parameter is not provided (or is null), no white space is used.\n  If white space is used, trailing commas will be used in objects and arrays.\n- `options`: An object with the following properties:\n  - `replacer`: Same as the `replacer` parameter.\n  - `space`: Same as the `space` parameter.\n  - `quote`: A String representing the quote character to use when serializing\n    strings.\n\n#### Return value\nA JSON5 string representing the value.\n\n### Node.js `require()` JSON5 files\nWhen using Node.js, you can `require()` JSON5 files by adding the following\nstatement.\n\n```js\nrequire('json5/lib/register')\n```\n\nThen you can load a JSON5 file with a Node.js `require()` statement. For\nexample:\n\n```js\nconst config = require('./config.json5')\n```\n\n## CLI\nSince JSON is more widely used than JSON5, this package includes a CLI for\nconverting JSON5 to JSON and for validating the syntax of JSON5 documents.\n\n### Installation\n```sh\nnpm install --global json5\n```\n\n### Usage\n```sh\njson5 [options] <file>\n```\n\nIf `<file>` is not provided, then STDIN is used.\n\n#### Options:\n- `-s`, `--space`: The number of spaces to indent or `t` for tabs\n- `-o`, `--out-file [file]`: Output to the specified file, otherwise STDOUT\n- `-v`, `--validate`: Validate JSON5 but do not output JSON\n- `-V`, `--version`: Output the version number\n- `-h`, `--help`: Output usage information\n\n## Contributing\n### Development\n```sh\ngit clone https://github.com/json5/json5\ncd json5\nnpm install\n```\n\nWhen contributing code, please write relevant tests and run `npm test` and `npm\nrun lint` before submitting pull requests. Please use an editor that supports\n[EditorConfig](http://editorconfig.org/).\n\n### Issues\nTo report bugs or request features regarding the JSON5 data format, please\nsubmit an issue to the [official specification\nrepository](https://github.com/json5/json5-spec).\n\nTo report bugs or request features regarding the JavaScript implentation of\nJSON5, please submit an issue to this repository.\n\n## License\nMIT. See [LICENSE.md](./LICENSE.md) for details.\n\n## Credits\n[Assem Kishore](https://github.com/aseemk) founded this project.\n\n[Michael Bolin](http://bolinfest.com/) independently arrived at and published\nsome of these same ideas with awesome explanations and detail. Recommended\nreading: [Suggested Improvements to JSON](http://bolinfest.com/essays/json.html)\n\n[Douglas Crockford](http://www.crockford.com/) of course designed and built\nJSON, but his state machine diagrams on the [JSON website](http://json.org/), as\ncheesy as it may sound, gave us motivation and confidence that building a new\nparser to implement these ideas was within reach! The original\nimplementation of JSON5 was also modeled directly off of Dougâ€™s open-source\n[json_parse.js] parser. Weâ€™re grateful for that clean and well-documented\ncode.\n\n[json_parse.js]:\nhttps://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\n[Max Nanasy](https://github.com/MaxNanasy) has been an early and prolific\nsupporter, contributing multiple patches and ideas.\n\n[Andrew Eisenberg](https://github.com/aeisenberg) contributed the original\n`stringify` method.\n\n[Jordan Tucker](https://github.com/jordanbtucker) has aligned JSON5 more closely\nwith ES5, wrote the official JSON5 specification, completely rewrote the\ncodebase from the ground up, and is actively maintaining this project.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/json5/json5.git"
  },
  "scripts": {
    "build": "rollup -c",
    "build-package": "node build/package.js",
    "build-unicode": "node build/unicode.js",
    "coverage": "tap --coverage-report html test",
    "lint": "eslint --fix .",
    "prepublishOnly": "npm run production",
    "preversion": "npm run production",
    "production": "npm run lint && npm test && npm run build",
    "test": "tap -Rspec --100 test",
    "version": "npm run build-package && git add package.json5"
  },
  "version": "2.1.0"
}
